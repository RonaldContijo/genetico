"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bode = void 0;
const complex_1 = require("../math/complex");
class Bode {
    constructor(calculateTransferFunction) {
        this.calculateTransferFunction = calculateTransferFunction;
    }
    calculateAbsoluteValue(value) {
        const sumOfQuadratic = (0, complex_1.add)((0, complex_1.pow)(Math.abs(value.re), 2), (0, complex_1.pow)(Math.abs(value.im), 2));
        const result = (0, complex_1.sqrt)(sumOfQuadratic);
        return result;
    }
    mag2db(value) {
        return 20 * Math.log10(value);
    }
    calculatePoints(tf, frequencyRange) {
        const magnitudeData = [];
        const phaseData = [];
        for (const f of frequencyRange) {
            // Calculate the transfer function at the given frequency
            const s = (0, complex_1.complex)(0, f);
            const calculatedTf = this.calculateTransferFunction.calculateValue(tf, s);
            // Calculate the magnitude and phase of the transfer function
            const magnitude = this.mag2db(this.calculateAbsoluteValue(calculatedTf));
            const phase = ((0, complex_1.arg)(calculatedTf) * 180) / Math.PI;
            magnitudeData.push({ x: f, y: magnitude });
            phaseData.push({ x: f, y: phase });
        }
        return {
            magnitude: magnitudeData,
            phase: phaseData,
        };
    }
}
exports.Bode = Bode;
//# sourceMappingURL=../../../../src/lib/bode/bode.js.map