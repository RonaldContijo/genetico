"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.divide = void 0;
const isComplex_1 = require("../utils/isComplex");
const isNumber_1 = require("../utils/isNumber");
function divide(a, b) {
    if ((0, isComplex_1.isComplex)(a) && (0, isComplex_1.isComplex)(b)) {
        const denominator = b.re ** 2 + b.im ** 2;
        const re = (a.re * b.re + a.im * b.im) / denominator;
        const im = (a.im * b.re - a.re * b.im) / denominator;
        return { re, im };
    }
    if ((0, isComplex_1.isComplex)(a) && (0, isNumber_1.isNumber)(b)) {
        const re = a.re / b;
        const im = a.im / b;
        return { re, im };
    }
    if ((0, isNumber_1.isNumber)(a) && (0, isComplex_1.isComplex)(b)) {
        const denominator = b.re ** 2 + b.im ** 2;
        const re = (a * b.re) / denominator;
        const im = (-a * b.im) / denominator;
        return { re, im };
    }
    if ((0, isNumber_1.isNumber)(a) && (0, isNumber_1.isNumber)(b)) {
        return a / b;
    }
    throw new Error(`Wrong type values for operation a: ${a}, b: ${b}`);
}
exports.divide = divide;
//# sourceMappingURL=../../../../../../src/lib/math/complex/operations/divide.js.map