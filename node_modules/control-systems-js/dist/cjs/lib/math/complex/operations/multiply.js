"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.multiply = void 0;
const isComplex_1 = require("../utils/isComplex");
const isNumber_1 = require("../utils/isNumber");
function multiply(a, b) {
    if ((0, isComplex_1.isComplex)(a) && (0, isComplex_1.isComplex)(b)) {
        const re = a.re * b.re - a.im * b.im;
        const im = a.re * b.im + a.im * b.re;
        return { im, re };
    }
    if ((0, isComplex_1.isComplex)(a) && (0, isNumber_1.isNumber)(b)) {
        const re = a.re * b;
        const im = a.im * b;
        return { im, re };
    }
    if ((0, isNumber_1.isNumber)(a) && (0, isComplex_1.isComplex)(b)) {
        const re = b.re * a;
        const im = b.im * a;
        return { im, re };
    }
    if ((0, isNumber_1.isNumber)(a) && (0, isNumber_1.isNumber)(b)) {
        return a * b;
    }
    throw new Error(`Wrong type values for operation a: ${a}, b: ${b}`);
}
exports.multiply = multiply;
//# sourceMappingURL=../../../../../../src/lib/math/complex/operations/multiply.js.map