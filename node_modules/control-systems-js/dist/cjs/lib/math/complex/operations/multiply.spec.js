"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const vitest_1 = require("vitest");
const multiply_1 = require("./multiply");
(0, vitest_1.describe)('multiply', () => {
    (0, vitest_1.it)('Should be able to multiply two complex numbers', () => {
        const a = { re: 3, im: 2 };
        const b = { re: 1, im: 4 };
        const result = (0, multiply_1.multiply)(a, b);
        (0, vitest_1.expect)(result).toEqual({ re: -5, im: 14 });
    });
    (0, vitest_1.it)('Should be able to multiply a complex number and a real number', () => {
        const a = { re: 3, im: 2 };
        const b = 2;
        const result = (0, multiply_1.multiply)(a, b);
        (0, vitest_1.expect)(result).toEqual({ re: 6, im: 4 });
    });
    (0, vitest_1.it)('Should be able to multiply a real number and a complex number', () => {
        const a = 2;
        const b = { re: 3, im: 2 };
        const result = (0, multiply_1.multiply)(a, b);
        (0, vitest_1.expect)(result).toEqual({ re: 6, im: 4 });
    });
    (0, vitest_1.it)('Should be able to multiply two real numbers', () => {
        const a = 2;
        const b = 3;
        const result = (0, multiply_1.multiply)(a, b);
        (0, vitest_1.expect)(result).toEqual(6);
    });
    (0, vitest_1.it)('Should throw error when given wrong input types', () => {
        const a = 'not a number';
        const b = { re: 3, im: 2 };
        (0, vitest_1.expect)(() => (0, multiply_1.multiply)(a, b)).toThrowError('Wrong type values for operation a: not a number, b: [object Object]');
    });
});
//# sourceMappingURL=../../../../../../src/lib/math/complex/operations/multiply.spec.js.map