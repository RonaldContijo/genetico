import { describe, expect, it } from 'vitest';
import { multiply } from './multiply';
describe('multiply', () => {
    it('Should be able to multiply two complex numbers', () => {
        const a = { re: 3, im: 2 };
        const b = { re: 1, im: 4 };
        const result = multiply(a, b);
        expect(result).toEqual({ re: -5, im: 14 });
    });
    it('Should be able to multiply a complex number and a real number', () => {
        const a = { re: 3, im: 2 };
        const b = 2;
        const result = multiply(a, b);
        expect(result).toEqual({ re: 6, im: 4 });
    });
    it('Should be able to multiply a real number and a complex number', () => {
        const a = 2;
        const b = { re: 3, im: 2 };
        const result = multiply(a, b);
        expect(result).toEqual({ re: 6, im: 4 });
    });
    it('Should be able to multiply two real numbers', () => {
        const a = 2;
        const b = 3;
        const result = multiply(a, b);
        expect(result).toEqual(6);
    });
    it('Should throw error when given wrong input types', () => {
        const a = 'not a number';
        const b = { re: 3, im: 2 };
        expect(() => multiply(a, b)).toThrowError('Wrong type values for operation a: not a number, b: [object Object]');
    });
});
//# sourceMappingURL=../../../../../../src/lib/math/complex/operations/multiply.spec.js.map